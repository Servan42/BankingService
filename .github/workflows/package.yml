name: package

on:
  push:
    branches:
      - master
      - feature/docker
      
jobs:
  
  Package_Backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish API Win64
        run: dotnet publish ./BankingService.Api/BankingService.Api.csproj -c Release --runtime win-x64 -o ./PublishBackend/API_win64

      - name: Publish API Linux64
        run: dotnet publish ./BankingService.Api/BankingService.Api.csproj -c Release --runtime linux-x64 -o ./PublishBackend/API_linux64
      
      - name: Publish CLI Win64
        run: dotnet publish ./BankingService.ConsoleApp/BankingService.ConsoleApp.csproj -c Release --runtime win-x64 -o ./PublishBackend/CLI_win64

      - name: Publish CLI Linux64
        run: dotnet publish ./BankingService.ConsoleApp/BankingService.ConsoleApp.csproj -c Release --runtime linux-x64 -o ./PublishBackend/CLI_linux64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PublishBackend
          path: ./PublishBackend

  Package_Frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
      
    - name: Build Frontend  
      working-directory: ./BankingService.Api/ClientApp
      run: | 
        npm ci
        npm run build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PublishFrontend
        path: ./BankingService.Api/ClientApp/dist/client-app/browser

  Package_Docker:
    runs-on: ubuntu-latest
    needs: [Package_Backend, Package_Frontend]

    steps:
    - uses: actions/checkout@v4

    - name: Download backend and frontend binaries
      uses: actions/download-artifact@v4

    - name: Prepare env
      run: |
        echo "APP_VERSION=$(grep -oPm1 "(?<=version: ')[^']+" ./BankingService.Api/ClientApp/src/environments/environment.ts)" >> $GITHUB_ENV

    - name: Prepare package
      run: |
        sed -i "s/VERSIONTOREPLACE/$APP_VERSION/g" ./docker/compose.yaml
        mkdir DockerDeploymentPackage_$APP_VERSION
        mv ./PublishBackend/API_linux64 DockerDeploymentPackage_$APP_VERSION/API_linux64/
        mv ./PublishFrontend/ DockerDeploymentPackage_$APP_VERSION/frontend/
        mv ./docker/compose.yaml DockerDeploymentPackage_$APP_VERSION/
        mv ./docker/DockerfileBackend DockerDeploymentPackage_$APP_VERSION/API_linux64/Dockerfile
        mv ./docker/DockerfileFrontend DockerDeploymentPackage_$APP_VERSION/frontend/Dockerfile
        mv ./docker/nginx.conf DockerDeploymentPackage_$APP_VERSION/frontend/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DockerDeploymentPackage_${{ env.APP_VERSION }}
        path: ./DockerDeploymentPackage_${{ env.APP_VERSION }}

